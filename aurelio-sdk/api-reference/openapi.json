{
  "openapi": "3.1.0",
  "info": { "title": "Saturn. Document processing API", "version": "0.0.27" },
  "servers": [{ "url": "https://api.aurelio.ai" }],
  "paths": {
    "/v1/chunk": {
      "post": {
        "tags": ["Chunk"],
        "summary": "Chunk a document.",
        "description": "Chunk a document.",
        "operationId": "chunk_document_v1_chunk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChunkRequestPayload" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkResponsePayload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/chunk/document/{document_id}": {
      "get": {
        "tags": ["Chunk"],
        "summary": "Get a chunked document.",
        "description": "Get a chunked document.",
        "operationId": "get_chunked_document_v1_chunk_document__document_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Document Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChunkResponsePayload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/extract/file": {
      "post": {
        "tags": ["Extract"],
        "summary": "Process a document from an uploaded file or stream.",
        "description": "Process a document from an uploaded file or stream.",
        "operationId": "process_document_file_v1_extract_file_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_process_document_file_v1_extract_file_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractResponsePayload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/extract/url": {
      "post": {
        "tags": ["Extract"],
        "summary": "Process a document from a URL.",
        "description": "Process a file from a URL.",
        "operationId": "process_url_v1_extract_url_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_process_url_v1_extract_url_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractResponsePayload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/extract/document": {
      "get": {
        "tags": ["Extract"],
        "summary": "List all documents",
        "description": "Get a document.",
        "operationId": "list_documents_v1_extract_document_get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 50,
              "title": "Size"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Page_DocumentTask_" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/extract/document/{document_id}": {
      "get": {
        "tags": ["Extract"],
        "summary": "Get a document.",
        "description": "Get a document.",
        "operationId": "get_document_v1_extract_document__document_id__get",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Document Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractResponsePayload"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/embeddings": {
      "post": {
        "tags": ["Embeddings"],
        "summary": "Create embeddings.",
        "description": "Create embeddings.",
        "operationId": "embeddings_v1_embeddings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EmbeddingResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "BM25Embedding": {
        "properties": {
          "indices": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Indices"
          },
          "values": {
            "items": { "type": "number" },
            "type": "array",
            "title": "Values"
          }
        },
        "type": "object",
        "required": ["indices", "values"],
        "title": "BM25Embedding"
      },
      "Body_process_document_file_v1_extract_file_post": {
        "properties": {
          "file": {
            "anyOf": [
              { "type": "string", "format": "binary" },
              { "type": "null" }
            ],
            "title": "File",
            "description": "File to be processed. Leave empty to send streamed data."
          },
          "quality": {
            "$ref": "#/components/schemas/ProcessingQuality",
            "description": "Processing quality of the document. High quality will result in longer processing time."
          },
          "chunk": {
            "type": "boolean",
            "title": "Chunk",
            "description": "Whether the document should be chunked"
          },
          "wait": {
            "type": "integer",
            "title": "Wait",
            "description": "The wait time to keep open the connection to the client in seconds, defaults to `30` seconds, `-1` means keep open connection until completion. After the wait time, the result can be retrieved from the /extract/<document_id> endpoint.",
            "default": 30
          }
        },
        "type": "object",
        "required": ["quality", "chunk"],
        "title": "Body_process_document_file_v1_extract_file_post"
      },
      "Body_process_url_v1_extract_url_post": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL of the document file."
          },
          "quality": {
            "$ref": "#/components/schemas/ProcessingQuality",
            "description": "Processing quality of the document. High quality will result in longer processing time."
          },
          "chunk": {
            "type": "boolean",
            "title": "Chunk",
            "description": "Whether the document should be chunked"
          },
          "wait": {
            "type": "integer",
            "title": "Wait",
            "description": "The wait time to keep open the connection to the client in seconds, defaults to `30` seconds, `-1` means keep open connection until completion. After the wait time, the result can be retrieved from the /extract/<document_id> endpoint.",
            "default": 30
          }
        },
        "type": "object",
        "required": ["url", "quality", "chunk"],
        "title": "Body_process_url_v1_extract_url_post"
      },
      "ChunkRequestPayload": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Input text to chunk."
          },
          "processing_options": {
            "$ref": "#/components/schemas/ChunkingOptions",
            "description": "The processing options for the chunker",
            "default": {
              "max_chunk_length": 400,
              "chunker_type": "regex",
              "window_size": 1,
              "delimiters": []
            }
          }
        },
        "type": "object",
        "required": ["content"],
        "title": "ChunkRequestPayload"
      },
      "ChunkResponsePayload": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TaskStatus",
            "description": "The status of the chunking process"
          },
          "usage": {
            "$ref": "#/components/schemas/Usage",
            "description": "Usage"
          },
          "message": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Message",
            "description": "Message"
          },
          "processing_options": {
            "$ref": "#/components/schemas/ChunkingOptions",
            "description": "The processing options for the chunker"
          },
          "document": { "$ref": "#/components/schemas/ResponseDocument" },
          "uploaded_urls": {
            "anyOf": [
              { "$ref": "#/components/schemas/UploadedUrls" },
              { "type": "null" }
            ],
            "description": "Uploaded URLs"
          }
        },
        "type": "object",
        "required": ["status", "usage", "processing_options", "document"],
        "title": "ChunkResponsePayload",
        "description": "Extended response payload for chunking"
      },
      "ChunkerType": {
        "type": "string",
        "enum": ["semantic", "regex"],
        "title": "ChunkerType"
      },
      "ChunkingOptions": {
        "properties": {
          "max_chunk_length": {
            "type": "integer",
            "title": "Max Chunk Length",
            "description": "The maximum chunk length for the chunker",
            "default": 400
          },
          "chunker_type": {
            "$ref": "#/components/schemas/ChunkerType",
            "description": "The chunker type, either semantic or regex",
            "default": "regex"
          },
          "window_size": {
            "type": "integer",
            "title": "Window Size",
            "description": "The window size for the semantic chunker",
            "default": 1
          },
          "delimiters": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Delimiters",
            "description": "Optional. The regex delimiters for the regex chunker",
            "default": []
          }
        },
        "type": "object",
        "title": "ChunkingOptions"
      },
      "DocumentTask": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "ID of the task"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID owner of document"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus",
            "description": "Status of the task"
          },
          "task_type": {
            "$ref": "#/components/schemas/TaskType",
            "description": "Type of the task"
          },
          "source_type": {
            "$ref": "#/components/schemas/SourceType",
            "description": "Type of the document"
          },
          "source": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Source"
          },
          "chunk": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Chunk"
          },
          "quality": {
            "anyOf": [
              { "$ref": "#/components/schemas/ProcessingQuality" },
              { "type": "null" }
            ]
          },
          "max_chunk_length": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Max Chunk Length"
          },
          "chunker_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/ChunkerType" },
              { "type": "null" }
            ]
          },
          "window_size": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Window Size"
          },
          "delimiters": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Delimiters"
          },
          "num_tokens": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Num Tokens"
          },
          "num_chunks": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Num Chunks"
          },
          "num_pages": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Num Pages"
          },
          "num_seconds": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Num Seconds"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size",
            "default": 0
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time",
            "default": 0.0
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          }
        },
        "type": "object",
        "required": ["id", "user_id", "status", "task_type", "source_type"],
        "title": "DocumentTask",
        "description": "Data model for a task"
      },
      "EmbeddingDataObject": {
        "properties": {
          "object": {
            "type": "string",
            "title": "Object",
            "description": "The object type",
            "default": "embedding"
          },
          "index": {
            "type": "integer",
            "title": "Index",
            "description": "The index of the embedding"
          },
          "embedding": {
            "$ref": "#/components/schemas/BM25Embedding",
            "description": "The embedding object"
          }
        },
        "type": "object",
        "required": ["index", "embedding"],
        "title": "EmbeddingDataObject"
      },
      "EmbeddingModel": {
        "type": "string",
        "enum": ["bm25"],
        "title": "EmbeddingModel"
      },
      "EmbeddingRequestPayload": {
        "properties": {
          "input": {
            "anyOf": [
              { "type": "string" },
              { "items": { "type": "string" }, "type": "array" }
            ],
            "title": "Input",
            "description": "Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays."
          },
          "input_type": {
            "type": "string",
            "enum": ["queries", "documents"],
            "title": "Input Type",
            "description": "Whether to embed `queries` or `documents`"
          },
          "model": {
            "$ref": "#/components/schemas/EmbeddingModel",
            "description": "The model name to use for embedding. Available models are `bm25`."
          }
        },
        "type": "object",
        "required": ["input", "input_type", "model"],
        "title": "EmbeddingRequestPayload"
      },
      "EmbeddingResponse": {
        "properties": {
          "message": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Message",
            "description": "Message"
          },
          "model": {
            "$ref": "#/components/schemas/EmbeddingModel",
            "description": "The model name used for embedding"
          },
          "object": {
            "type": "string",
            "title": "Object",
            "description": "The object type",
            "default": "list"
          },
          "usage": {
            "$ref": "#/components/schemas/EmbeddingUsage",
            "description": "Usage"
          },
          "data": {
            "items": { "$ref": "#/components/schemas/EmbeddingDataObject" },
            "type": "array",
            "title": "Data",
            "description": "The embedded documents"
          }
        },
        "type": "object",
        "required": ["model", "usage", "data"],
        "title": "EmbeddingResponse",
        "description": "Response object for embeddings"
      },
      "EmbeddingUsage": {
        "properties": {
          "tokens": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Tokens"
          },
          "pages": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Pages"
          },
          "seconds": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Seconds"
          },
          "prompt_tokens": { "type": "integer", "title": "Prompt Tokens" },
          "total_tokens": { "type": "integer", "title": "Total Tokens" }
        },
        "type": "object",
        "required": ["prompt_tokens", "total_tokens"],
        "title": "EmbeddingUsage"
      },
      "ExtractProcessingOptions": {
        "properties": {
          "chunk": {
            "type": "boolean",
            "title": "Chunk",
            "description": "Whether the document should be chunked into smaller pieces."
          },
          "quality": {
            "$ref": "#/components/schemas/ProcessingQuality",
            "description": "Processing quality of the document. High quality will result in longer processing time."
          }
        },
        "type": "object",
        "required": ["chunk", "quality"],
        "title": "ExtractProcessingOptions",
        "description": "Processing options for document processing"
      },
      "ExtractResponsePayload": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TaskStatus",
            "description": "The status of the chunking process"
          },
          "usage": {
            "$ref": "#/components/schemas/Usage",
            "description": "Usage"
          },
          "message": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Message",
            "description": "Message"
          },
          "processing_options": {
            "$ref": "#/components/schemas/ExtractProcessingOptions",
            "description": "The processing options for the document processor"
          },
          "document": { "$ref": "#/components/schemas/ResponseDocument" },
          "uploaded_urls": {
            "anyOf": [
              { "$ref": "#/components/schemas/UploadedUrls" },
              { "type": "null" }
            ],
            "description": "Uploaded URLs"
          }
        },
        "type": "object",
        "required": ["status", "usage", "processing_options", "document"],
        "title": "ExtractResponsePayload",
        "description": "Extended response payload for document processing"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Page_DocumentTask_": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/DocumentTask" },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "anyOf": [
              { "type": "integer", "minimum": 0.0 },
              { "type": "null" }
            ],
            "title": "Total"
          },
          "page": {
            "anyOf": [
              { "type": "integer", "minimum": 1.0 },
              { "type": "null" }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              { "type": "integer", "minimum": 1.0 },
              { "type": "null" }
            ],
            "title": "Size"
          },
          "pages": {
            "anyOf": [
              { "type": "integer", "minimum": 0.0 },
              { "type": "null" }
            ],
            "title": "Pages"
          }
        },
        "type": "object",
        "required": ["items", "total", "page", "size"],
        "title": "Page[DocumentTask]"
      },
      "ProcessingQuality": {
        "type": "string",
        "enum": ["low", "high"],
        "title": "ProcessingQuality"
      },
      "ResponseChunk": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "ID of the chunk"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Content of the chunk"
          },
          "chunk_index": {
            "type": "integer",
            "title": "Chunk Index",
            "description": "Index of the chunk in the document"
          },
          "num_tokens": {
            "type": "integer",
            "title": "Num Tokens",
            "description": "Number of tokens in the chunk"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Metadata of the chunk",
            "default": {}
          }
        },
        "type": "object",
        "required": ["id", "content", "chunk_index", "num_tokens"],
        "title": "ResponseChunk"
      },
      "ResponseDocument": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "ID of the document"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Content of the document"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "Source of the document"
          },
          "source_type": {
            "$ref": "#/components/schemas/SourceType",
            "description": "Type of the document e.g. video/mp4, application/pdf"
          },
          "num_chunks": {
            "type": "integer",
            "title": "Num Chunks",
            "description": "Total number of chunks in the document"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Metadata for users",
            "default": {}
          },
          "chunks": {
            "items": { "$ref": "#/components/schemas/ResponseChunk" },
            "type": "array",
            "title": "Chunks",
            "description": "Chunks of the document",
            "default": []
          }
        },
        "type": "object",
        "required": ["id", "content", "source", "source_type", "num_chunks"],
        "title": "ResponseDocument"
      },
      "SourceType": {
        "type": "string",
        "enum": ["application/pdf", "text/plain", "video/mp4"],
        "title": "SourceType"
      },
      "TaskStatus": {
        "type": "string",
        "enum": ["pending", "completed", "failed"],
        "title": "TaskStatus"
      },
      "TaskType": {
        "type": "string",
        "enum": ["extract", "chunk", "embeddings"],
        "title": "TaskType"
      },
      "UploadedUrls": {
        "properties": {
          "original_file": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Original File",
            "description": "URL of the uploaded file"
          },
          "result_html": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Result Html",
            "description": "GCP URL of the result HTML"
          },
          "result_json": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Result Json",
            "description": "GCP URL of the result JSON"
          },
          "result_markdown": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Result Markdown",
            "description": "GCP URL of the result Markdown"
          }
        },
        "type": "object",
        "required": [
          "original_file",
          "result_html",
          "result_json",
          "result_markdown"
        ],
        "title": "UploadedUrls"
      },
      "Usage": {
        "properties": {
          "tokens": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Tokens"
          },
          "pages": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Pages"
          },
          "seconds": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Seconds"
          }
        },
        "type": "object",
        "title": "Usage"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization"
      }
    }
  }
}
